<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5v8Btt0ARt1kPm8AAAAASUVORK5CYII=
</value>
  </data>
</root>